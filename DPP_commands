git init
# create .gitignore and LICENCE file
git pull
# create init_setup file for automation-- to execute commands
bash init_setup.sh   #it will create .env

[or do it manually-- 
conda create --prefix ./env python=3.8 -y]

source activate ./env  # to activate env

""" --components of pipeline--> Data ingestion-->EDA-->FEA-->Model Building-->Model Evaluation
there are two types of pipeline-->training pipeline and production pipeline

other than above files there are few more files which are part of infrastucture--logger.py, exception.py
utils.py (it is like helper--load,save,read any file), setup.py(when you want to publish you repo
one can see details @ author, project), requirements.txt(py dependencies), .gitkeep(while development
we push folder local to github--so to avoid pushing empty folder)
--modular coding-- means we are creating seperate seperate infra for each task. We are breaking tasks
in small coding, we are creating single package for 1 single task to solve the complex problem"""
"""Project Structure-->Structure_file1) github--workflow--yaml-- &--.gitkeepfile
stuct_file2--> Notebook-->ipynb files
struct_file3-->src-->main pro file-->components-->Data Ingestion.py, preproce.py,model_training.py
       file3.1--src-->pipeline-->training pipeline, prediction pipeline
       file3.2--src-->logger.py, exception.py, utils.py
struct_file4-->req.txt, setup.py,

# create template.py
